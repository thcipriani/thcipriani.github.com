<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tyler Cipriani</title>
    <description>Gentleman, Scholar, Web Hacker</description>    
    <link>http://www.tylercipriani.com</link>
    <atom:link href="http://www.tylercipriani.com/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Development Environments with Vagrant, Docker, and Supervisord</title>
        <description>&lt;p&gt;I&amp;#8217;ve used Vagrant a fair amount in my day, and it&amp;#8217;s great. I
enjoy being able to spin-up toy linux environments to test out ideas.
I tend to use the &lt;a href=&quot;http://docs.vagrantup.com/v2/provisioning/chef_solo.html&quot;&gt;Chef provisioner&lt;/a&gt; with Vagrant
to build-out a local environment that matches my server fairly closely.&lt;/p&gt;

&lt;h2&gt;My Ever-Evolving Rant About DevOps&lt;/h2&gt;

&lt;p&gt;I&amp;#8217;ve been thinking about Chef a lot lately. Often is the time, in moments of
profound frustration, that I&amp;#8217;ve
had the thought that Chef is nothing more than a useless, leaky abstraction that separates me
from something I know fairly well&amp;#8212;Linux.&lt;/p&gt;

&lt;p&gt;This thought is usually fleeting: Chef provides many needed abstractions that
are, ultimately, much easier to grok than the underlying Linux system. Further,
Chef allows you to keep a(n ostensibly) well-tested system under version control.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ve come to the realization that my problem with Chef is not really a problem
with Chef, but a &lt;a href=&quot;https://www.domenkozar.com/2014/03/11/why-puppet-chef-ansible-arent-good-enough-and-we-can-do-better/&quot;&gt;problem with Linux itself&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Linux system administration is difficult because Linux
commands are non-deterministic and rely heavily on system
state (e.g., installed software, permissions, network settings and availability).
Maintaining a bare-metal, long-running server non-interactively using Chef
sucks because &lt;a href=&quot;http://me.andering.com/2011/02/03/server-login-considered-harmful/&quot;&gt;any hand-tinkering via ssh&lt;/a&gt; is going to fuck with the &amp;#8220;state&amp;#8221; of
the system&amp;#8212;creating different results for subsequent chef-client runs.
This system state adjustment may or may not be reflected in the chef repository (which
double sucks).&lt;/p&gt;

&lt;h2&gt;Why Docker Curtails My Rage&lt;/h2&gt;

&lt;p&gt;I started to think about Docker. I feel Docker addresses
the problem of program state better than other currently available solutions
(although, &lt;a href=&quot;https://nixos.org/nixos/&quot;&gt;Nix&lt;/a&gt; is looking pretty promising as well). While Docker is
still a Linux system&amp;#8212;and, ipso facto, state-dependant&amp;#8212;it&amp;#8217;s also
ephemeral and therefore, by not persisting changes to state, Docker has
created a previously unavailable (on bare metal hardware), lightweight
workaround to the problem of system state.&lt;/p&gt;

&lt;p&gt;As is my wont, I decided today to play a bit with Docker on Vagrant and, lo-and-below,
I found that the newest version of Vagrant (1.6.2, as of May 26th) can actually use &lt;a href=&quot;https://www.vagrantup.com/blog/feature-preview-vagrant-1-6-docker-dev-environments.html&quot;&gt;docker as a &lt;em&gt;provider&lt;/em&gt;&lt;/a&gt;,
that is, as an alternative to VirtualBox. Using Docker as a provider means
that you can run a fully-independent development enviroment, on your host
machine without the overhead of VirtualBox. Neat.&lt;/p&gt;

&lt;p&gt;&amp;#8220;Imma setup a local development environment for Ubuntu 14.04, nginx and php-fpm
using Vagrant, Supervisord and Docker,&amp;#8221; says I.&lt;/p&gt;

&lt;h2&gt;Project Layout&lt;/h2&gt;

&lt;p&gt;To keep my project directory nice and tidy, I&amp;#8217;ve separated-out most of the
files needed by the Docker provider into a &lt;code&gt;Docker&lt;/code&gt; folder. This
results in the directory structure below.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;├── Docker
│   ├── Dockerfile
│   ├── nginx
│   │   └── default
│   ├── php-fpm
│   │   └── php-fpm.conf
│   └── supervisor
│       └── supervisord.conf
├── Vagrantfile
└── www
    └── index.php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;Dockerfile&lt;/code&gt; is used to build the main docker machine and the subfolders
in the &lt;code&gt;Docker&lt;/code&gt; directory contain configuration used in the &lt;code&gt;Dockerfile&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;www&lt;/code&gt; folder is my fake php project folder.&lt;/p&gt;

&lt;h2&gt;VagrantFile&lt;/h2&gt;

&lt;p&gt;Since docker handles so much of what was previously handled by Vagrant provisioner,
the &lt;code&gt;Vagrantfile&lt;/code&gt; for a Docker-backed Vagrant instance is pretty sparse.&lt;/p&gt;

&lt;p&gt;In mine, I&amp;#8217;ve got:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Vagrant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;synced_folder&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./www&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/var/www&amp;quot;&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;# Sync&amp;#39;d folder&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;provider&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;docker&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./Docker&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# specifies the path to the Dockerfile&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;8080:80&amp;#39;&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;# Forwards port 8080 from the host to the Docker Container port 80&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Dockerfile&lt;/h2&gt;

&lt;p&gt;Most of the work of provisioning a container is handled by Docker and
the Dockerfile. In fact, if you were only ever going to run this container on a Linux machine, I
don&amp;#8217;t think that Vagrant adds any needed functionality to the &lt;code&gt;docker.io&lt;/code&gt; cli.
In terms of portability, however, Vagrant is, at this time, a necessary evil
to run docker on OSX and Windows.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;FROM ubuntu:latest

MAINTAINER Tyler Cipriani, tyler@tylercipriani.com

&lt;span class=&quot;c&quot;&gt;# Download and install php, nginx, and supervisor, hey, just linux for a change!&lt;/span&gt;
RUN apt-get update
RUN apt-get install -y software-properties-common
RUN add-apt-repository ppa:nginx/stable
RUN apt-get update
RUN apt-get -y dist-upgrade
RUN apt-get install -y php5-fpm nginx supervisor

&lt;span class=&quot;c&quot;&gt;# Setup config files&lt;/span&gt;
RUN &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;daemon off;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/nginx/nginx.conf
ADD ./nginx/default /etc/nginx/sites-enabled/default
ADD ./supervisor/supervisord.conf /etc/supervisor/supervisord.conf
ADD ./php-fpm/php-fpm.conf /etc/php5/fpm/php-fpm.conf

&lt;span class=&quot;c&quot;&gt;# Shared volume&lt;/span&gt;
RUN mkdir -p /var/www
VOLUME &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/var/www&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Default command for container, start supervisor&lt;/span&gt;
CMD &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;supervisord&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;--nodaemon&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
USER root

&lt;span class=&quot;c&quot;&gt;# Expose port 80 of the container&lt;/span&gt;
EXPOSE 80
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This &lt;code&gt;Dockerfile&lt;/code&gt; takes care of building a docker container from the latest
Ubuntu image (14.04 as of May 26th, 2014). Running this code installs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Nginx 1.6.0&lt;/li&gt;
&lt;li&gt;PHP 5.5.9&lt;/li&gt;
&lt;li&gt;Supervisor&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This config also starts supervisor with the &lt;code&gt;--nodaemon&lt;/code&gt; flag by default.
Docker can run a container running a non-daemonized program as a daemon
(much like supervisor can run non-daemonized programs as daemons).
Supervisor is used as a way of running both nginx and php-fpm as non-daemonized
programs. It is also noteworthy that the dockerfile creates and/or modifys configuration files for php-fpm and nginx
to make sure they both run in non-daemon mode.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;nginx/default&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;nginx&quot;&gt;&lt;span class=&quot;k&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;default_server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kn&quot;&gt;root&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;/var/www&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;index.php&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;index.html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# pass the PHP scripts to FastCGI server&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;\.php$&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;try_files&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$uri&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;404&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;fastcgi_split_path_info&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;^(.+\.php)(/.+)&lt;/span&gt;$&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;fastcgi_pass&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;unix:/var/run/php5-fpm.sock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;fastcgi_index&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;index.php&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fastcgi_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;php-fpm/php-fpm.conf&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ini&quot;&gt;&lt;span class=&quot;k&quot;&gt;[global]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/var/run/php5-fpm.pid&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;error_log&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/var/log/php5-fpm.log&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;daemonize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;no&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/etc/php5/fpm/pool.d/*.conf&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;supervisor/supervisord.conf&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ini&quot;&gt;&lt;span class=&quot;k&quot;&gt;[unix_http_server]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/var/run/supervisor.sock   ; (the path to the socket file)&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;chmod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0700                       ; sockef file mode (default 0700)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;[supervisord]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;logfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/tmp/supervisord.log ; (main log file;default $CWD/supervisord.log)&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;logfile_maxbytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;50MB        ; (max main logfile bytes b4 rotation;default 50MB)&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;logfile_backups&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;10           ; (num of main logfile rotation backups;default 10)&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;loglevel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;info                ; (log level;default info; others: debug,warn,trace)&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;pidfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/tmp/supervisord.pid ; (supervisord pidfile;default supervisord.pid)&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;nodaemon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;false               ; (start in foreground if true;default false)&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;minfds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1024                  ; (min. avail startup file descriptors;default 1024)&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;minprocs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;200                 ; (min. avail process descriptors;default 200)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;; the below section must remain in the config file for RPC&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;; (supervisorctl/web interface) to work, additional interfaces may be&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;; added by defining them in separate rpcinterface: sections&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;[rpcinterface:supervisor]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;supervisor.rpcinterface_factory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;supervisor.rpcinterface:make_main_rpcinterface&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;[supervisorctl]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;serverurl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;[program:php5-fpm]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/usr/sbin/php5-fpm -c /etc/php5/fpm&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;stdout_events_enabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;stderr_events_enabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;[program:nginx]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/usr/sbin/nginx&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;stdout_events_enabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;stderr_events_enabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Jam Time&lt;/h2&gt;

&lt;p&gt;With all of our configuration in place there isn&amp;#8217;t much left to do aside
from running the vagrant instance and allowing docker to create our container.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo docker pull ubuntu &lt;span class=&quot;c&quot;&gt;# to grab the latest Ubuntu image, Vagrant should probably do this but doesn&amp;#39;t&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo vagrant up --provider&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;docker --debug &lt;span class=&quot;c&quot;&gt;# use debug if you don&amp;#39;t want to sit waiting with no info for a long time on the first run&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With that, you now have a container running nginx and php-fpm that is sharing
a folder with you at &lt;code&gt;/var/www&lt;/code&gt;. Navigating to &lt;code&gt;http://localhost:8080/index.php&lt;/code&gt;
should show you the contents of your &lt;code&gt;./www/index.php&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;This process is really simple AND super lightweight. I&amp;#8217;ve been running my
docker/vagrant instance for about 45 minutes alongside chrome and tmux/xterm
without any noticeable jankyness on a notoriously janky laptop.&lt;/p&gt;
</description>
        <pubDate>Sun, 25 May 2014 00:00:00 -0600</pubDate>
        <link>http://www.tylercipriani.com/2014/05/25/lightweight-portable-vagrant-docker.html</link>
        <guid isPermaLink="true">http://www.tylercipriani.com/2014/05/25/lightweight-portable-vagrant-docker.html</guid>
      </item>
    
      <item>
        <title>Create a Baller/Useful MOTD with ANSI Art</title>
        <description>&lt;p&gt;Everyone universally agrees that most &lt;a href=&quot;http://linux.die.net/man/5/motd&quot;&gt;Message of the Days (MOTDs)&lt;/a&gt;
are stupid and suck. By the end of reading this post, your mind grapes should be swollen with the knowledge
of how to make an MOTD that isn&amp;#8217;t stupid and, some would say, &lt;em&gt;doesn&amp;#8217;t&lt;/em&gt;
suck.&lt;/p&gt;

&lt;h2&gt;Prerequisites&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Imagemagick&lt;/li&gt;
&lt;li&gt;OpenJDK&lt;/li&gt;
&lt;li&gt;coreutils&lt;/li&gt;
&lt;li&gt;perl&lt;/li&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This should have you covered:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo apt-get install imagemagick openjdk-6-jdk coreutils perl git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Creating the Util-say file&lt;/h2&gt;

&lt;p&gt;I use &lt;a href=&quot;https://github.com/maandree/util-say&quot;&gt;Util-Say&lt;/a&gt; to create motd messages.
I started out using &lt;a href=&quot;https://github.com/rossy2401/img2xterm&quot;&gt;img2xterm&lt;/a&gt;,
but I&amp;#8217;ve found I get better results with Util-Say.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone https://github.com/maandree/util-say
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;util-say
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./img2ponysay -- yourimg.png &amp;gt; yourimg.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can also try &lt;code&gt;./img2ponysay -2 -- youimg.png &amp;gt; yourimg.txt&lt;/code&gt; but I&amp;#8217;ve never had good results with that&lt;/p&gt;

&lt;h2&gt;MOTD-ifying&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://tylercipriani-files.s3.amazonaws.com/mammoth_motd.png&quot; alt=&quot;Mammoth Motd&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On CentOS and Debian, I usually just throw the ponysay file directly into &lt;code&gt;/etc/motd&lt;/code&gt; and maybe add on some other useful info:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo cat yourimg.txt &amp;gt; /etc/motd
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo figlet &lt;span class=&quot;s2&quot;&gt;&amp;quot;$(hostname)&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/motd
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo &lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Public IP: $(dig +short myip.opendns.com @resolver1.opendns.com)\n&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/motd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On Ubuntu Boxes (since they use &lt;a href=&quot;https://wiki.ubuntu.com/UpdateMotd&quot;&gt;update-motd(1)&lt;/a&gt;),
I do pretty much the same thing except I just make a bash
script in &lt;code&gt;/etc/update-motd.d/25-baller-motd&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/env bash&lt;/span&gt;
cat yourimg.txt
figlet &lt;span class=&quot;s2&quot;&gt;&amp;quot;$(hostname)&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Public IP: $(dig +short myip.opendns.com @resolver1.opendns.com)\n&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt; -v fortune &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;&amp;gt; /dev/null &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; fortune
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There are likely better articles on creating a &lt;em&gt;useful&lt;/em&gt; MOTD,
(&lt;a href=&quot;http://www.mewbies.com/how_to_customize_your_console_login_message_tutorial.htm&quot;&gt;here&lt;/a&gt;&amp;#8217;s
one that looks kinda cool) but there are exactly none-better articles on
creating MOTDs that are so flossy!&lt;/p&gt;
</description>
        <pubDate>Thu, 22 May 2014 00:00:00 -0600</pubDate>
        <link>http://www.tylercipriani.com/2014/05/22/creating-baller-useful-motd-ascii-art.html</link>
        <guid isPermaLink="true">http://www.tylercipriani.com/2014/05/22/creating-baller-useful-motd-ascii-art.html</guid>
      </item>
    
      <item>
        <title>Replacing Jekyll with Pandoc and a Makefile</title>
        <description>&lt;p&gt;I used to use del.icio.us to keep track of links, then it went away.
After del.icio.us shutdown, I used a ton of uniquely awful services to
keep track of links. Eventually, I came around to the idea that all I
needed was a series of markdown files and github: &lt;a href=&quot;https://github.com/thcipriani/links/tree/8d2442d4ba8a9090f645dd2cfe73216a7350dea5&quot;&gt;BOOM!&lt;/a&gt;
Public link repositiory&amp;#8212;just like del.icio.us back in the day.&lt;/p&gt;

&lt;p&gt;After a while I started thinking, I could make these files a lot more
presentable if I did some jekyll-ifying and served them out on github.&lt;/p&gt;

&lt;h2&gt;Previously Jekyllfied&lt;/h2&gt;

&lt;p&gt;My &lt;code&gt;linuxtips&lt;/code&gt; repo is just a dumb jekyll repo. Esentially all &lt;code&gt;linuxtips&lt;/code&gt; is is
just &lt;a href=&quot;https://github.com/thcipriani/linuxtips/blob/master/README.md&quot;&gt;a big &lt;code&gt;README&lt;/code&gt; file&lt;/a&gt;.
So, for that repo, I created a &lt;code&gt;gh-pages&lt;/code&gt; branch with a &lt;code&gt;_config.yml&lt;/code&gt; and
a &lt;code&gt;_layout&lt;/code&gt; directory and popped in a &lt;a href=&quot;https://github.com/thcipriani/linuxtips/blob/gh-pages/Makefile&quot;&gt;Makefile&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;INDEX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CURDIR&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/index.md

&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;INDEX&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;:
  @ git show origin/master:README.md &amp;gt; &lt;span class=&quot;nv&quot;&gt;$@&lt;/span&gt;
  @ perl -i -pe &lt;span class=&quot;s1&quot;&gt;&amp;#39;print &amp;quot;---\nlayout: default\ntitle: Linux Tips\n---\n\n&amp;quot; if $$. == 1;&amp;#39;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$@&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and then I got &lt;a href=&quot;http://www.tylercipriani.com/linuxtips/&quot;&gt;tylercipriani.com/linuxtips&lt;/a&gt;; neat.&lt;/p&gt;

&lt;p&gt;I ran into some problems with that approach along the way. Mostly problems
with git and the separate branches and the order in which I&amp;#8217;d commit and pull
and whatever, it was/is a headache.&lt;/p&gt;

&lt;h2&gt;Pandoc&lt;/h2&gt;

&lt;p&gt;I started thinking about &lt;a href=&quot;http://johnmacfarlane.net/pandoc/&quot;&gt;Pandoc&lt;/a&gt;. Pandoc is this haskell library that makes
miracles of text happen.&lt;/p&gt;

&lt;p&gt;Got an org-mode file and need TeX? Done.&lt;/p&gt;

&lt;p&gt;Got a markdown slideshow that needs to become a beamer slide show? OK, sure.&lt;/p&gt;

&lt;p&gt;Fuck Beamer, how about markdown slides &amp;rarr; Reveal.js slides? You bet your sweet sensual bologna.&lt;/p&gt;

&lt;h2&gt;Imma install Pandoc&amp;#8230;&lt;/h2&gt;

&lt;h3&gt;Debian?&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;sudo apt-get install haskell-platform
cabal update
cabal install pandoc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;then add it to your path in your &lt;code&gt;.${SHELL}rc&lt;/code&gt; file:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -d &lt;span class=&quot;s2&quot;&gt;&amp;quot;$HOME/.cabal/bin&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;$HOME/.cabal/bin:$PATH&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;OSX?&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;brew update
brew install pandoc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Imma Use Pandoc&amp;#8230;&lt;/h2&gt;

&lt;p&gt;Alright, so I&amp;#8217;ve got tons of markdown files, fairly structured, with bunches of links and I need html5.
I&amp;#8217;ll create a &lt;code&gt;Makefile&lt;/code&gt; proof-of-concept for this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;index.html: README.md
  pandoc -s -f markdown -t html5 -o &lt;span class=&quot;s2&quot;&gt;&amp;quot;$@&amp;quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$&amp;lt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Running &lt;code&gt;make&lt;/code&gt; takes my &lt;code&gt;README.md&lt;/code&gt; and makes this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;generator&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;pandoc&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;viewport&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;width=device-width, initial-scale=1.0, user-scalable=yes&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;style &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;white-space&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!--[if lt IE 9]&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;    &amp;lt;script src=&amp;quot;http://html5shim.googlecode.com/svn/trunk/html5.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;  &amp;lt;![endif]--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;tyler-ciprianis-bookmarks&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Tyler Cipriani&amp;#39;s Bookmarks&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;In an effort to &lt;span class=&quot;nt&quot;&gt;&amp;lt;em&amp;gt;&lt;/span&gt;not&lt;span class=&quot;nt&quot;&gt;&amp;lt;/em&amp;gt;&lt;/span&gt; have 100+ tabs open…&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://www.flickr.com/photos/tylercipriani/&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;My Photography&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Design.md&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Design&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Development.md&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Development&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Business.md&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Business&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Fun.md&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Fun&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Title/Layout/CSS&lt;/h2&gt;

&lt;p&gt;So now that I&amp;#8217;m outputting html, I still need to be able to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Configure a layout in which to render html&lt;/li&gt;
&lt;li&gt;Include a css file in said layout&lt;/li&gt;
&lt;li&gt;Add post metadata to my layout (e.g., title, headline, etc.)&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Pandoc is able to do all of these things&amp;#8212;easy-peasy-lemon-squeezy.&lt;/p&gt;

&lt;p&gt;First, to establish a layout, let&amp;#8217;s copy the default html5 layout file for Pandoc:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;pandoc -D html5 &amp;gt; _layout.html5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I&amp;#8217;ll make some small tweaks to that file, keep the variables I need, ditch the
variables I don&amp;#8217;t need. Here is the html5 layout file I came up with:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;X-UA-Compatible&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;IE=edge&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;$if(title-prefix)$$title-prefix$ - $endif$$pagetitle$&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;viewport&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;width=device-width, initial-scale=1&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://fonts.googleapis.com/css?family=Open+Sans:800&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
$for(css)$
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;$css$&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
$endfor$
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!--[if lt IE 9]&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;    &amp;lt;script src=&amp;quot;http://html5shim.googlecode.com/svn/trunk/html5.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;  &amp;lt;![endif]--&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;main&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;container&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    $body$
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next, I need to figure out how to include a css stylesheet.  A quick
search for &lt;code&gt;css&lt;/code&gt; in &lt;code&gt;pandoc(1)&lt;/code&gt; turns up the &lt;code&gt;--css&lt;/code&gt; flag which
enables you to link to a css stylesheet.&lt;/p&gt;

&lt;p&gt;Updated &lt;code&gt;Makefile&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;index.html: README.md
  pandoc -s --template &lt;span class=&quot;s2&quot;&gt;&amp;quot;_layout&amp;quot;&lt;/span&gt; --css &lt;span class=&quot;s2&quot;&gt;&amp;quot;css/main.css&amp;quot;&lt;/span&gt; -f markdown -t html5 -o &lt;span class=&quot;s2&quot;&gt;&amp;quot;$@&amp;quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$&amp;lt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally, I need to be able to include a unique &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; tag string for
each page. Again, a search through &lt;code&gt;pandoc(1)&lt;/code&gt; for &lt;code&gt;variable&lt;/code&gt; yields results;
using the &lt;code&gt;-V&lt;/code&gt; flag enables you to set template variables using &lt;code&gt;-V [KEY]=[val]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A bit more digging in the online docs, however, nets better solution:
YAML Metadata blocks&amp;#8212;just like jekyll!&lt;/p&gt;

&lt;p&gt;So, for each markdown file in my repo, I&amp;#8217;ll add a block to the top that looks
like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;---
pagetitle: &amp;lt;pagetitle&amp;gt;
---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;$pagetitle$&lt;/code&gt; is the variable I defined in my &lt;code&gt;_layout.html5&lt;/code&gt; that I&amp;#8217;m
now passing as a template to Pandoc.&lt;/p&gt;

&lt;h2&gt;Makefile fanciness&lt;/h2&gt;

&lt;p&gt;Alright, so now that I have the basics of Pandoc down, I need to whip my
&lt;code&gt;Makefile&lt;/code&gt; into shape.&lt;/p&gt;

&lt;p&gt;First thing is I want to convert ALL of my markdown files to html, not just
the &lt;code&gt;README.md&lt;/code&gt;. So howzabout I add a wildcard target for all the &lt;code&gt;html&lt;/code&gt; files?
Also, the whole point of this is to make a github pages site, so let&amp;#8217;s add
that to the &lt;code&gt;Makefile&lt;/code&gt; too&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;REPO :&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;shell git config --get remote.origin.url&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;GHPAGES&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; gh-pages

all: &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;addprefix &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;/, &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;addsuffix .html, &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;basename &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;wildcard *.md&lt;span class=&quot;k&quot;&gt;))))&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;:
  git clone &lt;span class=&quot;s2&quot;&gt;&amp;quot;$(REPO)&amp;quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$(GHPAGES)&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git checkout &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git checkout --orphan &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git rm -rf .&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;/%.html: %.md
  pandoc -s --template &lt;span class=&quot;s2&quot;&gt;&amp;quot;_layout&amp;quot;&lt;/span&gt; -c &lt;span class=&quot;s2&quot;&gt;&amp;quot;css/main.css&amp;quot;&lt;/span&gt; -f markdown -t html5 -o &lt;span class=&quot;s2&quot;&gt;&amp;quot;$@&amp;quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$&amp;lt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Running &lt;code&gt;make&lt;/code&gt; at this point should checkout your current git repository to
a subdirectory called &lt;code&gt;gh-pages&lt;/code&gt; (which should be added to &lt;code&gt;.gitignore&lt;/code&gt;
on master).&lt;/p&gt;

&lt;p&gt;This &lt;code&gt;Makefile&lt;/code&gt; first tries to checkout an existing &lt;code&gt;gh-pages&lt;/code&gt; branch,
otherwise it creates a new orphan branch for &lt;code&gt;gh-pages&lt;/code&gt;. After
that, we glob the current directory for any file name &lt;code&gt;*.md&lt;/code&gt; and run it
through pandoc, placing the result in &lt;code&gt;gh-pages/[whatever].html&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;Niceities&lt;/h2&gt;

&lt;p&gt;I&amp;#8217;m a big fan of pre-processors, so the css/main.css file (which
doesn&amp;#8217;t &lt;em&gt;actually exist&lt;/em&gt; as of yet) should be converted from &lt;code&gt;less&lt;/code&gt;.
The easiest way to do that: add a &lt;code&gt;package.json&lt;/code&gt; with &lt;code&gt;less&lt;/code&gt; as a dependency.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;linkblog&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;dependencies&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;less&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;*&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now running &lt;code&gt;npm install&lt;/code&gt; should create a new &lt;code&gt;node_modules&lt;/code&gt; directory (which
should be added to &lt;code&gt;.gitignore&lt;/code&gt; on master). Now we need to add a &lt;code&gt;lessc&lt;/code&gt;
step to our &lt;code&gt;Makefile&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;LESSC&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; node_modules/less/bin/lessc
&lt;span class=&quot;nv&quot;&gt;LESSFILE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; less/main.less

&lt;span class=&quot;nv&quot;&gt;CSSDIR&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;/css
&lt;span class=&quot;nv&quot;&gt;CSSFILE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;CSSDIR&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;/main.css

&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;CSSFILE&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;CSSDIR&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;LESSFILE&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;LESSC&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$(LESSFILE)&amp;quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$(CSSFILE)&amp;quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;CSSDIR&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;:
    mkdir -p &lt;span class=&quot;s2&quot;&gt;&amp;quot;$(CSSDIR)&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Also, it&amp;#8217;s always nice to have a &lt;code&gt;clean&lt;/code&gt; target in any &lt;code&gt;Makefile&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;clean:
    rm -rf &lt;span class=&quot;s2&quot;&gt;&amp;quot;$(GHPAGES)&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I&amp;#8217;d also like to be able to preview before commiting this file by typing &lt;code&gt;make serve&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;serve:
    &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; python -m SimpleHTTPServer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally, speaking of commiting this file, let&amp;#8217;s make &lt;code&gt;commit&lt;/code&gt; a target, too.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;commit:
    &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
        git add . &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
        git commit --edit --message&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Publish @$$(date)&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
        git push origin &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now when I update my &lt;code&gt;links&lt;/code&gt; repo's markdown files I issue a simple series of commands:
&lt;code&gt;make&lt;/code&gt; checks-out my &lt;code&gt;gh-pages&lt;/code&gt; branch and builds the html and css files,
&lt;code&gt;make serve&lt;/code&gt; lets me look at the output html at &lt;code&gt;localhost:8000&lt;/code&gt;,
and, finally, &lt;code&gt;make commit&lt;/code&gt; pushes those changes live.&lt;/p&gt;

&lt;p&gt;So here&amp;#8217;s the &lt;a href=&quot;http://www.tylercipriani.com/links&quot;&gt;result&lt;/a&gt; and the final &lt;code&gt;Makefile&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;REPO :&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;shell git config --get remote.origin.url&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;GHPAGES&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; gh-pages

&lt;span class=&quot;nv&quot;&gt;LESSC&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; node_modules/less/bin/lessc
&lt;span class=&quot;nv&quot;&gt;LESSFILE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; less/main.less

&lt;span class=&quot;nv&quot;&gt;CSSDIR&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;/css
&lt;span class=&quot;nv&quot;&gt;CSSFILE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;CSSDIR&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;/main.css

all: init clean &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;CSSFILE&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;addprefix &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;/, &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;addsuffix .html, &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;basename &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;wildcard *.md&lt;span class=&quot;k&quot;&gt;))))&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;/%.html: %.md
    pandoc -s --template &lt;span class=&quot;s2&quot;&gt;&amp;quot;_layout&amp;quot;&lt;/span&gt; -c &lt;span class=&quot;s2&quot;&gt;&amp;quot;css/main.css&amp;quot;&lt;/span&gt; -f markdown -t html5 -o &lt;span class=&quot;s2&quot;&gt;&amp;quot;$@&amp;quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$&amp;lt;&amp;quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;CSSFILE&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;CSSDIR&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;LESSFILE&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;LESSC&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$(LESSFILE)&amp;quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$(CSSFILE)&amp;quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;CSSDIR&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;:
    mkdir -p &lt;span class=&quot;s2&quot;&gt;&amp;quot;$(CSSDIR)&amp;quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;:
    @echo &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;REPO&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
    git clone &lt;span class=&quot;s2&quot;&gt;&amp;quot;$(REPO)&amp;quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$(GHPAGES)&amp;quot;&lt;/span&gt;
    @echo &lt;span class=&quot;s2&quot;&gt;&amp;quot;Donezo&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git checkout &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git checkout --orphan &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git rm -rf .&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

init:
    @command -v pandoc &amp;gt; /dev/null 2&amp;gt;&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;1 &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;pandoc not found http://johnmacfarlane.net/pandoc/installing.html&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    @&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -x &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;LESSC&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; npm install

serve:
    &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; python -m SimpleHTTPServer

clean:
    rm -rf &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;

commit:
    &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
        git add . &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
        git commit --edit --message&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Publish @$$(date)&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
        git push origin &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;GHPAGES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;

.PHONY: init clean commit serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
        <pubDate>Tue, 13 May 2014 00:00:00 -0600</pubDate>
        <link>http://www.tylercipriani.com/2014/05/13/replace-jekyll-with-pandoc-makefile.html</link>
        <guid isPermaLink="true">http://www.tylercipriani.com/2014/05/13/replace-jekyll-with-pandoc-makefile.html</guid>
      </item>
    
      <item>
        <title>Knowledge Nuggets From My Tmux.conf</title>
        <description>&lt;p&gt;When I switched from GNU Screen to Tmux, I was just jazzed that Tmux &lt;em&gt;had&lt;/em&gt; a
status bar. To achieve that same effect in Screen I had a cryptic
115-character &lt;code&gt;hardstatus&lt;/code&gt; string that I copy&amp;#8211;pasted from someplace
lost to the annals of the Internet Archive.&lt;/p&gt;

&lt;p&gt;It wasn&amp;#8217;t too long after I made the switch until I felt that old
hacker itch and began scouring Github for Tmux tips.&lt;/p&gt;

&lt;p&gt;You can view my complete &lt;code&gt;tmux.conf&lt;/code&gt; on &lt;a href=&quot;https://github.com/thcipriani/dotfiles/blob/master/tmux.conf&quot;&gt;my github&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Tmux Tips for the Uninitiated&lt;/h2&gt;

&lt;p&gt;&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;Ctrl&lt;/code&gt;-&lt;code&gt;f&lt;/code&gt; Meta is for super stars&lt;/p&gt;

&lt;p&gt;I used to always bind &lt;code&gt;Ctrl&lt;/code&gt;-&lt;code&gt;a&lt;/code&gt; to Meta to make Tmux behave like Screen;
however, when you use Screen inside Tmux (as I often do with our AWS servers),
hitting &lt;code&gt;Ctrl&lt;/code&gt;-&lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; can get pretty tiresome. Plus, you can&amp;#8217;t use
Readline very effectively without &lt;code&gt;Ctrl&lt;/code&gt;-&lt;code&gt;a&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;unbind-key C-b &lt;span class=&quot;c&quot;&gt;#no more Ctrl-b&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Switch me to ^f, thanks&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;-option -g prefix C-f
&lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt;-key f send-prefix
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;/li&gt;&lt;/p&gt;

&lt;p&gt;&lt;li&gt;
Faster escape&lt;/p&gt;

&lt;p&gt;When I first started using Tmux I couldn&amp;#8217;t stand the amount of time it
took to enter copy-mode. Then I realized&amp;#8212;I didn&amp;#8217;t have to.&lt;/p&gt;

&lt;p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;-option -sg escape-time 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;/li&gt;&lt;/p&gt;

&lt;p&gt;&lt;li&gt;
Maximize Panes&lt;/p&gt;

&lt;p&gt;One of the things I love about Vim splits is that you can hit &lt;code&gt;Ctrl-w&lt;/code&gt; &lt;code&gt;|&lt;/code&gt; to
maximize the current  pane and hit &lt;code&gt;Ctrl-w&lt;/code&gt; &lt;code&gt;=&lt;/code&gt; to bring it back to an even
split. Bringing that functionality to Tmux is very powerful and super easy.
This line will let you hit &lt;code&gt;Meta&lt;/code&gt; &lt;code&gt;|&lt;/code&gt; to maximize a single pane and then hit
&lt;code&gt;Meta&lt;/code&gt; &lt;code&gt;|&lt;/code&gt; again to bring it back to the original split.&lt;/p&gt;

&lt;p&gt;Warning: this is a tip that will only work with tmux 1.8+ (check your version via &lt;code&gt;tmux -V&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt;-key &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; resize-pane -Z &lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt; display-message &lt;span class=&quot;s2&quot;&gt;&amp;quot;Zoom zoom zoom&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;/li&gt;&lt;/p&gt;

&lt;p&gt;&lt;li&gt;
Vim-esque system clipboard copy&amp;#8211;paste&lt;/p&gt;

&lt;p&gt;Sometimes system clipboard support from Vim isn&amp;#8217;t enough. It&amp;#8217;s
convenient to be able to pull whatever is in your Tmux buffer onto your
system clipboard (preferably without having to memorize any new keybindings
and without overwriting any existing keybindings).&lt;/p&gt;

&lt;p&gt;First, I set the window mode-keys to use Vi bindings:&lt;/p&gt;

&lt;p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;-window-option -g mode-keys vi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Next, I bind &lt;code&gt;Meta Esc&lt;/code&gt; to enter Tmux copy-mode:&lt;/p&gt;

&lt;p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;unbind-key &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt;-key Escape copy-mode
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;After that, I bind visual-selection and copy keys inside vi-copy mode to
their Vim equivalents:&lt;/p&gt;

&lt;p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt;-key -t vi-copy &lt;span class=&quot;s1&quot;&gt;&amp;#39;v&amp;#39;&lt;/span&gt; begin-selection
&lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt;-key -t vi-copy &lt;span class=&quot;s1&quot;&gt;&amp;#39;y&amp;#39;&lt;/span&gt; copy-selection
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Finally, I bind &lt;code&gt;Meta y&lt;/code&gt; to execute a shell command. This should work on either
Linux or OSX, although I&amp;#8217;ve only tested this on OSX:&lt;/p&gt;

&lt;p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;-shell &lt;span class=&quot;s1&quot;&gt;&amp;#39;test &amp;quot;$(uname -s)&amp;quot; = &amp;quot;Darwin&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;bind-key y run-shell &amp;quot;tmux show-buffer | pbcopy&amp;quot; \; display-message &amp;quot;Copied tmux buffer to system clipboard&amp;quot;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;-shell &lt;span class=&quot;s1&quot;&gt;&amp;#39;test &amp;quot;$(uname -s)&amp;quot; = &amp;quot;Linux&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;bind-key y run-shell &amp;quot;tmux show-buffer | xclip -sel clip -i&amp;quot; \; display-message &amp;quot;Copied tmux buffer to system clipboard&amp;quot;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;/li&gt;&lt;/p&gt;

&lt;p&gt;&lt;li&gt;
OSX Specific Tmux file&lt;/p&gt;

&lt;p&gt;Even though Tmux and Vim are really popular on OSX&amp;#8212;they are, essentially,
broken. You have to do the whole &lt;code&gt;reattach-to-user-namespace&lt;/code&gt; thing to get
Vim&amp;#8217;s clipboard to play nicely inside Tmux. This mess makes your
&lt;code&gt;tmux.conf&lt;/code&gt; look more cluttered and makes your dotfiles a little less portable.
To fix this I keep an OSX Specific &lt;code&gt;tmux.conf&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#dumb osx&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;-shell &lt;span class=&quot;s1&quot;&gt;&amp;#39;test &amp;quot;$(uname)&amp;quot; = &amp;quot;Darwin&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;source ~/.tmux-osx.conf&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;/li&gt;&lt;/p&gt;

&lt;p&gt;&lt;li&gt;
Steve Losh&amp;#8217;s Bad Wolf Status Bar&lt;/p&gt;

&lt;p&gt;News Flash: Steve Losh makes cool looking stuff. In Steve&amp;#8217;s version
of this he uses a small script to get his unread email count from his local
offlineimap folder. In the version below I use a little bash script I wrote
to grab weather info (that I call weathermajig).&lt;/p&gt;

&lt;p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Bad Wolf by Steve Losh&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# =====================&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -g status-fg white
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -g status-bg colour234
&lt;span class=&quot;c&quot;&gt;# set -g status-bg default #set for transparent background&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -g window-status-activity-attr bold
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -g pane-border-fg colour245
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -g pane-active-border-fg colour39
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -g message-fg colour16
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -g message-bg colour221
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -g message-attr bold
&lt;span class=&quot;c&quot;&gt;# Custom status bar&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Powerline&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -g status-left-length 32
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -g status-right-length 150
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -g status-interval 5
&lt;span class=&quot;c&quot;&gt;# Lets add the current weather to our status bar—why? Well Why the french-toast not?&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -g status-left &lt;span class=&quot;s1&quot;&gt;&amp;#39;#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour238,nobold]#[fg=colour15,bg=colour238,bold] #(weathermajig boulder --short) #[fg=colour238,bg=colour234,nobold]&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -g status-right &lt;span class=&quot;s1&quot;&gt;&amp;#39;#[fg=colour245]❬ %R ❬ %d %b #[fg=colour254,bg=colour234,nobold]#(rdio-current-track-tmux)#[fg=colour16,bg=colour254,bold] #h &amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -g window-status-format &lt;span class=&quot;s2&quot;&gt;&amp;quot;#[fg=white,bg=colour234] #I #W &amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -g window-status-current-format &lt;span class=&quot;s2&quot;&gt;&amp;quot;#[fg=colour234,bg=colour39]#[fg=colour16,bg=colour39,noreverse,bold] #I ❭ #W #[fg=colour39,bg=colour234,nobold]&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;/li&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 12 Sep 2013 00:00:00 -0600</pubDate>
        <link>http://www.tylercipriani.com/2013/09/12/important-lines-in-my-tmux.html</link>
        <guid isPermaLink="true">http://www.tylercipriani.com/2013/09/12/important-lines-in-my-tmux.html</guid>
      </item>
    
      <item>
        <title>Dotfile Boilerplate</title>
        <description>&lt;p&gt;Earlier today I made a tweak to one of my ever-growing collection of
&lt;a href=&quot;https://github.com/thcipriani/dotfiles/&quot;&gt;dotfiles&lt;/a&gt; and it reminded me
that I&amp;#8217;m not too happy with my dotfile&amp;#8217;s &lt;code&gt;bootstrap&lt;/code&gt; script.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;bootstrap&lt;/code&gt; file that I have in my repo is from &lt;a href=&quot;http://errtheblog.com/posts/89-huba-huba&quot;&gt;a 2008 blog post&lt;/a&gt;
and I&amp;#8217;ve never been too thrilled with it.&lt;/p&gt;

&lt;p&gt;The problems my old &lt;code&gt;boostrap&lt;/code&gt; were&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It required that Ruby be installed&amp;#8212;which was a pain on production
servers where I never intended to have Ruby installed.&lt;/li&gt;
&lt;li&gt;It overwrote any existing dotfiles in &lt;code&gt;$HOME&lt;/code&gt; without warning&lt;/li&gt;
&lt;li&gt;It added every sub-directory/file in the .dotfiles directory&amp;#8212;you couldn&amp;#8217;t
add a README.md file without it being symlinked in the &lt;code&gt;$HOME&lt;/code&gt; directory as
&lt;code&gt;.README.md&lt;/code&gt;&amp;#8212;silly, right?!&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Long story short&amp;#8212;I needed a new &lt;code&gt;bootstrap&lt;/code&gt; file. I&amp;#8217;m a big
believer in not reinventing the wheel, so I went looking for the canonical
example of the dotfile bootstrap file.&lt;/p&gt;

&lt;p&gt;I started perusing dotfile repos on github&amp;#8212;which is always exciting
to me (because I&amp;#8217;m super nerdy) and there are some amazing dotfile resources
on github:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dotfiles.github.io/&quot;&gt;Github &amp;#10084; ~/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mathiasbynens/dotfiles&quot;&gt;Mathias Bynens&amp;#8217; Sensible Hacker Defaults for OSX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gf3/dotfiles&quot;&gt;gf3&amp;#8217;s Sexy Bash Prompt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zachholman.com/2010/08/dotfiles-are-meant-to-be-forked/&quot;&gt;Zach Holman&amp;#8217;s Bootstrap script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/addyosmani/dotfiles/blob/master/.aliases&quot;&gt;Addy Osmani&amp;#8217;s Handy Aliases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pengwynn/dotfiles&quot;&gt;pengwynn&amp;#8217;s There&amp;#8217;s no place like ~/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Seeing all of this got me to thinking&amp;#8212;wouldn&amp;#8217;t it be great if there
were a project that amalgamated all of this fun stuff? Like HTML5 Boilerplate
for dotfiles.&lt;/p&gt;

&lt;p&gt;The project will keep canonical examples of files like the &lt;code&gt;bootstrap&lt;/code&gt; script.
It would also keep an opinionated list of functions, aliases and
configurations that could help beginners get a great start and normalize
dotfile distribution in the same way that pathogen normalized vim plugins
into bundles.&lt;/p&gt;

&lt;h2&gt;Dotfile Boilerplate&lt;/h2&gt;

&lt;p&gt;So there&amp;#8217;s the starting point: &lt;a href=&quot;https://github.com/thcipriani/dotfile-boilerplate&quot;&gt;Dotfile Boilerplate&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At the very least it&amp;#8217;s a solidly structured start with an amazing
bootstrap script that I modfied based off of Zach Holman&amp;#8217;s setup.&lt;/p&gt;

&lt;p&gt;So that&amp;#8217;s the whole idea&amp;#8212;the hope is that this repository can grow
and collect great ideas, functions, and well-considered dotfiles from
interesting discussions and people around the internet.&lt;/p&gt;

&lt;p&gt;Beginners will have an amazing starting point and advanced users will have
a wellspring of ideas.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://help.github.com/articles/using-pull-requests/&quot;&gt;Fork &amp;#8216;em if ya got &amp;#8216;em.&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 10 Aug 2013 00:00:00 -0600</pubDate>
        <link>http://www.tylercipriani.com/2013/08/10/dotfiles-how-to-get-started.html</link>
        <guid isPermaLink="true">http://www.tylercipriani.com/2013/08/10/dotfiles-how-to-get-started.html</guid>
      </item>
    
      <item>
        <title>Installing Vim from source on CentOS&amp;nbsp;6.3</title>
        <description>&lt;p&gt;…or, I suppose, other Linux-es…Linuxi…Linux distributions.&lt;/p&gt;

&lt;p&gt;Many of the Vim features on which I&amp;#8217;ve come to depend simply aren't available in Vim pre-7.3.3. That&amp;#8217;s fine if I&amp;#8217;m working on an OS that cares about having up-to-date software like Ubuntu or OSX; however, it ain&amp;#8217;t so great if I&amp;#8217;m working on a shared host that uses CentOS &lt;strong&gt;&lt;em&gt;five point something dumb&lt;/em&gt;&lt;/strong&gt; because the hosting-providers weren&amp;#8217;t hugged as children (I&amp;#8217;d guess).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;edit&lt;/strong&gt;&amp;#8212;10/01/2013&lt;/p&gt;

&lt;p&gt;For installing on Ubuntu and additional source install tips see this little
&lt;a href=&quot;https://github.com/Valloric/YouCompleteMe/wiki/Building-Vim-from-source&quot;&gt;post&lt;/a&gt;
on the YouCompleteMe wiki&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;New OS, Old Repo&lt;/h2&gt;

&lt;p&gt;The only thing worse than working on an old OS, with an old version of Vim is working on a &lt;em&gt;new&lt;/em&gt; OS with an old version of Vim. I recently disovered that the yum-installable Vim (vim-enhanced) version on CentOS 6.3 is v.7.2.411—WTF CentOS? What&amp;#8217;s your deal, guy?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Some plugins that depend on version 7.3:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&amp;shy;&lt;a href=&quot;http://majutsushi.github.com/tagbar/&quot; target=&quot;_blank&quot;&gt;Tagbar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&amp;shy;&lt;a href=&quot;http://myusuf3.github.com/numbers.vim/&quot; target=&quot;_blank&quot;&gt;Numbers.vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&amp;shy;&lt;a href=&quot;http://valloric.github.com/YouCompleteMe/&quot; target=&quot;_blank&quot;&gt;YouCompleteMe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;And, really, those are just the plugins that fail &lt;em&gt;loudly&lt;/em&gt; for me. Like the ones that vomit, &amp;#8220;Hey, WTF, guy?&amp;#8221; to stdout every rootin&amp;#8217; tootin&amp;#8217; time I fire up Vim. There would likely be other functionality that I&amp;#8217;d loose by not using Vim 7.3.3+.&lt;/p&gt;

&lt;p&gt;I don&amp;#8217;t have to take this kind of guff from CentOS. No. I think that, instead, I&amp;#8217;m going to do something awesome.&lt;/p&gt;

&lt;p&gt;Compiling Vim from source means you don&amp;#8217;t have to get pushed around by crummy distro repos and you look like a 1970s-era Fred Williams-level badass…so…bonus points…&lt;/p&gt;

&lt;h2&gt;Retrieving Vim source&lt;/h2&gt;

&lt;p&gt;Vim keeps its source in a Mercurial repo on googlcode so you need to download it. To do that you should have Mercurial installed (which you can, somewhat ironically, install from via yum &lt;code&gt;yum install mercurial&lt;/code&gt;). You should switch to the root user for this install and for your sanity so use &lt;code&gt;su&lt;/code&gt; or &lt;code&gt;sudo bash&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo bash
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /usr/local/src/
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;hg clone https://vim.googlecode.com/hg/ vim
&lt;span class=&quot;lineno&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;vim
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Configuration options&lt;/h2&gt;

&lt;p&gt;There are quite a few configuration options (which you can view by running &lt;code&gt;./configure --help&lt;/code&gt; in your newly created &lt;code&gt;vim&lt;/code&gt; directory)—with respect to Vim installs I support going nuclear. Even at it&amp;#8217;s most ginormous Vim will still be a small install relative to other IDEs—Vim is my primary editor and IDE, so I&amp;#8217;m down to do it big. I&amp;#8217;m also going to use the &lt;code&gt;/usr&lt;/code&gt; prefix so that Vim is installed system-wide.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./configure --prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr --with-compiledby&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Tyler the Compiler&amp;quot;&lt;/span&gt; --with-features&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;huge --enable-rubyinterp --enable-pythoninterp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;make &amp;amp;&amp;amp; make install&lt;/h2&gt;

&lt;p&gt;Srsly, that&amp;#8217;s it&amp;#8212;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; make &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Congrats! You&amp;#8217;re one bad mother Vim compiler.&lt;/p&gt;

&lt;p&gt;So… &lt;code&gt;which vim&lt;/code&gt;? &lt;code&gt;/usr/bin/vim&lt;/code&gt;. Boom. Yeah, that&amp;#8217;s right.&lt;/p&gt;
</description>
        <pubDate>Sun, 24 Feb 2013 00:00:00 -0700</pubDate>
        <link>http://www.tylercipriani.com/2013/02/24/install-vim-from-source.html</link>
        <guid isPermaLink="true">http://www.tylercipriani.com/2013/02/24/install-vim-from-source.html</guid>
      </item>
    
      <item>
        <title>Vim, the OSX clipboard and Tmux</title>
        <description>&lt;p&gt;I&amp;#8217;ve been an Ubuntu user for 4 years now. Since I started working at Upsync 3 months ago, I&amp;#8217;ve found myself a very lonely desktop Linux user. Also, since this job is my first heavy-duty exposure to back-end web development, I&amp;#8217;ve found myself a very confused desktop Linux user.&lt;/p&gt;

&lt;p&gt;While there are many tools for working on a website backend available in Ubuntu, few are as shiny as those available in OSX (Charles Proxy, usable in Chrome. I want that. I want it hard.). Also, want to do any iOS work? (you know I do)&amp;mdash;then you &lt;em&gt;must&lt;/em&gt; have a mac.&lt;/p&gt;

&lt;p&gt;On the flip side there is my natural inclination to be a bit of a contrarian and principles and such&amp;#8230;&lt;/p&gt;

&lt;h2&gt;&amp;#8230;but it&amp;#8217;s so shiny!&lt;/h2&gt;

&lt;p&gt;I&amp;#8217;ve caved. I&amp;#8217;m a sell-out. I&amp;#8217;m not the cool hardcore ideologue I once believed myself to be. You know those hypothetical, &lt;em&gt;which-side-of-history-would-you-be-on-type&lt;/em&gt;, questions? Well, I can now safely say that I would &lt;em&gt;not&lt;/em&gt; have been in the French Resistance.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;m typing this on the beautiful back-lit keyboard of a brand-new, core-i7-having, 8GB-RAM-possesing, 256GB-SSD-not-spinning monster that is a 13&amp;#8243; MacBook Air.&lt;/p&gt;

&lt;h2&gt;I thought this was supposed to be easy&lt;/h2&gt;

&lt;p&gt;The first thing I did was get iTerm 2 up and running and then install Homebrew. After removing the dumb &amp;#8220;Natural&amp;#8221; scrolling and using PCKeyboard hack to remap some keys, I&amp;#8217;m working exactly as I was before. I really can&amp;#8217;t tell a difference. Which is a little anti-climactic for a computer that cost as much as my first car (oh, how I miss that purple Taurus!).&lt;/p&gt;

&lt;p&gt;It was really easy to get everything set up as it was before, except&amp;#8230;Vim&amp;#8230;my clipboard&amp;#8230;Tmux&amp;#8230;they didn&amp;#8217;t work together and that was CRIPPLING! Seriously, I depend on those things working together.&lt;/p&gt;

&lt;p&gt;This post is written as a little reminder to myself of how I got it all up and running again.&lt;/p&gt;

&lt;h2&gt;The process&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Install Homebrew:&lt;/strong&gt;&lt;br /&gt;Instructions are available on &lt;a href=&quot;http://mxcl.github.com/homebrew/&quot; target=&quot;_blank&quot; title=&quot;Homebrew&quot;&gt;Github&lt;/a&gt; but really all it boils down to is: &lt;code&gt;ruby -e &quot;$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)&quot;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Install MacVim:&lt;/strong&gt;&lt;br /&gt;And make sure it overrides the system default Vim, which is pre-7.3 Vim and sucks (or it was last week when my MacBook got here) use: &lt;code&gt;brew install macvim --override-system-vim&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Install Tmux:&lt;/strong&gt;&lt;br /&gt;Easy peesy lemon squeezy: &lt;code&gt;brew install tmux&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Thank the good, sweet lord for Paul Hinze:&lt;/strong&gt;&lt;br /&gt; Install Paul&amp;#8217;s reattach-to-user-namespace hack via homebrew: &lt;code&gt;brew install reattach-to-user-namespace --wrap-pbcopy-and-pbpaste&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Append your &lt;code&gt;~/.tmux.conf&lt;/code&gt; file&lt;/strong&gt;:&lt;br /&gt;With this lovely gem: &lt;code&gt;set-option -g default-command &quot;reattach-to-user-namespace -l zsh&quot;&lt;/code&gt; or you can use bash, I guess, I don&amp;#8217;t know because I use ZSH. That should be a step somewhere&amp;#8230;&lt;code&gt;chsh -s /bin/zsh&lt;/code&gt;. Done.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Now if only OSX Mountain Lion possessed the awesome power of moving windows between workspaces using keyboard shortcuts. Someday&amp;#8230; someday.&lt;/p&gt;
</description>
        <pubDate>Sat, 09 Feb 2013 00:00:00 -0700</pubDate>
        <link>http://www.tylercipriani.com/2013/02/09/vim-mac-osx-tmux-clipboard.html</link>
        <guid isPermaLink="true">http://www.tylercipriani.com/2013/02/09/vim-mac-osx-tmux-clipboard.html</guid>
      </item>
    
      <item>
        <title>My ZSH (and bash) prompt</title>
        <description>&lt;p&gt;In order to become a card-carrying Linux user, I feel like you &lt;em&gt;need&lt;/em&gt; to
have spent a truly astounding amount of time fiddling with your
&lt;a href=&quot;https://github.com/thcipriani/dotfiles&quot; target=&quot;_blank&quot;&gt;dotfiles.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Me? I&amp;#8217;ve gone way beyond the point of diminishing returns. Past the
point where anyone who loves me can even feign interest.
And now I&amp;#8217;m quaffing the sweet nectar of victory, and that victory
nectar &lt;em&gt;is&lt;/em&gt; sweet. Oh yes, that&amp;#8217;s right: my insanely customized
prompt is now a part of &lt;a href=&quot;http://github.com/robbyrussell/oh-my-zsh&quot; target=&quot;_blank&quot;&gt;Bobby Russell&amp;#8217;s Oh-My-ZSH&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I&amp;#8217;m feeling the pride, joy, and anxiety that can only come from watching
my little utf-8 baby move beyond my home directory and march deep into
the uncharted home directories of what I can only assume are &lt;strong&gt;BILLIONS&lt;/strong&gt; of users.&lt;/p&gt;

&lt;h2&gt;All your Oh-My-ZSH are belong to us!
&lt;a href=&quot;http://knowyourmeme.com/memes/all-your-base-are-belong-to-us&quot; target=&quot;_blank&quot;&gt;*&lt;/a&gt;&lt;/h2&gt;


&lt;p&gt;&amp;#8230;or it will when you update your theme. See, cause, oh-my-zsh uses
&lt;a href=&quot;http://github.com/robbyrussell/oh-my-zsh/tree/master/themes/&quot; target=&quot;_blank&quot;&gt;themes&lt;/a&gt;
to specify how your prompt looks. You can define what theme you&amp;#8217;d like to use
in your &lt;code&gt;~/.zshrc&lt;/code&gt; file. On or around line 8 you&amp;#8217;ll want to
update the line that starts with &lt;code&gt;ZSH_THEME=&amp;#8230;&lt;/code&gt; to look like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Set name of the theme to load.&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Look in ~/.oh-my-zsh/themes/&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Optionally, if you set this to &amp;quot;random&amp;quot;, it&amp;#39;ll load a random theme each&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# time that oh-my-zsh is loaded.&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;ZSH_THEME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;junkfood&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;




&lt;h2&gt;Almost, not quite&amp;#8230;&lt;/h2&gt;


&lt;p&gt;Like any good dotfile obsessive, I&amp;#8217;ve continued to make changes to this
prompt since I made my pull request to ole Robby! I&amp;#8217;ve modified the prompt
to show the same sort of branch information about SVN repos that it currently
displays for git repos (e.g., current branch name and local modifications).
That little code chestnut is available over on
&lt;a href=&quot;https://github.com/thcipriani/oh-my-zsh&quot; target=&quot;_blank&quot;&gt;my fork of the oh-my-zsh build&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Bash Junkfood theme&lt;/h2&gt;


&lt;p&gt;I also have a version of this prompt for Bash that I&amp;#8217;ve made in preperation
for the undoubted overwhelming demand that I expect to begin any time now:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# An extravagent PS1 http://blog.bigdinosaur.org/easy-ps1-colors/&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;prompt &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# 30m - Black&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# 31m - Red&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# 32m - Green&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# 33m - Yellow&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# 34m - Blue&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# 35m - Purple&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# 36m - Cyan&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# 37m - White&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# 0 - Normal&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# 1 - Bold&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;BLACK&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\[\033[0;30m\]&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;BLACKBOLD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\[\033[1;30m\]&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;RED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\[\033[0;31m\]&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;REDBOLD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\[\033[1;31m\]&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GREEN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\[\033[0;32m\]&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GREENBOLD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\[\033[1;32m\]&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;19&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;YELLOW&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\[\033[0;33m\]&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;20&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;YELLOWBOLD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\[\033[1;33m\]&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;21&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;BLUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\[\033[0;34m\]&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;22&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;BLUEBOLD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\[\033[1;34m\]&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;23&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PURPLE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\[\033[0;35m\]&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;24&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PURPLEBOLD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\[\033[1;35m\]&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;25&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CYAN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\[\033[0;36m\]&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;26&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CYANBOLD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\[\033[1;36m\]&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;27&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;WHITE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\[\033[0;37m\]&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;28&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;WHITEBOLD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\[\033[1;37m\]&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;29&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PS1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;$WHITEBOLD# $GREEN\u$WHITEBOLD. $BLUE\h$WHITEBOLD. $YELLOW\d$WHITE at $PURPLE\@$WHITEBOLD. $CYAN\w\n  $WHITE&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;31&lt;/span&gt; prompt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;




&lt;h2&gt;Prompt Inspiration&lt;/h2&gt;


&lt;p&gt;Most of the inspiration for moving to ZSH and for creating this &lt;em&gt;extravagant&lt;/em&gt;
(to borrow a phrase) prompt came from a blog post written by Mr. Steve Losh
called, &lt;a href=&quot;http://stevelosh.com/blog/2010/02/my-extravagant-zsh-prompt/#oh-my-zsh&quot; target=&quot;_blank&quot;&gt;
&amp;#8220;My Extravagant ZSH Prompt&amp;#8221;&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 18 Dec 2012 00:00:00 -0700</pubDate>
        <link>http://www.tylercipriani.com/2012/12/18/zsh-prompt-customization.html</link>
        <guid isPermaLink="true">http://www.tylercipriani.com/2012/12/18/zsh-prompt-customization.html</guid>
      </item>
    
      <item>
        <title>Integrating git with your existing website</title>
        <description>&lt;p&gt;Better git it in your soul&lt;a href=&quot;http://www.youtube.com/watch?v=SPoK1lryfh4&quot; target=&quot;_blank&quot;&gt;*&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Git has a &lt;a href=&quot;https://bitly.com/bundles/matthewmccullough/1&quot; target=&quot;_blank&quot;&gt;lot&lt;/a&gt;
of &lt;a href=&quot;http://try.github.com/levels/1/challenges/1&quot; target=&quot;blank&quot;&gt;great&lt;/a&gt;
&lt;a href=&quot;https://peepcode.com/products/git&quot; target=&quot;_blank&quot;&gt;tutorials&lt;/a&gt;
for getting started. There are also a number of great articles on
&lt;a href=&quot;http://daneden.github.com/github-workflow/&quot; target=&quot;_blank&quot;&gt;how to
use git and github&lt;/a&gt; for your workflow.&lt;/p&gt;

&lt;p&gt;What I haven&amp;#8217;t seen is an article on how to integrate git with your
current site without storing any code on github. I&amp;#8217;m writing this blog
to create a quick reference for how to get up and running using git on your
existing site.&lt;/p&gt;

&lt;h2&gt;Needed&lt;/h2&gt;


&lt;p&gt;I&amp;#8217;m making the assumption that you have the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Knowledge of Linux&lt;/li&gt;
&lt;li&gt;&amp;shy;&lt;a href=&quot;http://library.linode.com/lamp-guides/ubuntu-12.04-precise-pangolin&quot; target=&quot;_blank&quot;&gt;
A local development environment
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;git-core installed both locally and on your webserver&lt;/li&gt;
&lt;li&gt;rsync installed both locally and on your webserver&lt;/li&gt;
&lt;li&gt;&amp;shy;&lt;a href=&quot;http://www.commandlinefu.com/commands/view/771/copy-your-ssh-public-key-on-a-remote-machine-for-passwordless-login-the-easy-way&quot; target=&quot;_blank&quot;&gt;
  Keyless SSH access to your webserver
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&amp;#8217;m using Ubuntu 12.04 locally, but I&amp;#8217;d assume that most of this
won&amp;#8217;t be too different on a different distribution or on a Mac&amp;#8212;but
I&amp;#8217;m probably totally wrong about that &amp;#9786;&lt;/p&gt;

&lt;hr&gt;




&lt;h2&gt;Step One:&lt;/h2&gt;


&lt;p&gt;&lt;strong&gt;RSync your site to your local development environment.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In order to begin to develop locally (and break the old &lt;a href=&quot;http://www.bnj.com/cowboy-coding-pink-sombrero/&quot; target=&quot;_blank&quot;&gt;cowboy-coding&lt;/a&gt; habits
that you&amp;#8217;ve undoubtedly developed over the years) you need a local
copy of your site.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open your terminal emulator and &lt;code&gt;cd&lt;/code&gt; to the directory in which
you will be storing these files (i.e. &lt;code&gt;cd /srv&amp;shy;/www&amp;shy;/tylercipriani.com&amp;shy;/public_html&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Rsync the &lt;code&gt;htdocs&lt;/code&gt; or &lt;code&gt;public_html&lt;/code&gt; from your webserver
into this local directory:&lt;/li&gt;
&lt;/ol&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rsync -av -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;ssh -p &amp;lt;port&amp;gt;&amp;quot;&lt;/span&gt; &amp;lt;rsync-username&amp;gt;@&amp;lt;webserver&amp;gt;:/path/to/public_html/ .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The command breaks down like this:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;&lt;code&gt;a&lt;/code&gt; means &amp;#8220;Archive&amp;#8221;&amp;#8212;keeps permissions, mtimes, etc the same&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;v&lt;/code&gt; means &amp;#8220;Verbose&amp;#8221;&amp;#8212;increases verbosity of the command&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;e&lt;/code&gt; means &amp;#8220;RSH&amp;#8221;&amp;#8212;allows you to use remote shell (same as RSH=command)&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;:/path/to/htdocs/&lt;/code&gt;&amp;#8212;the path to you htdocs folder. 
      The trailing &lt;code&gt;/&lt;/code&gt; is significant&amp;#8212;it means copy the 
      content of the htdocs directory rather than the directory by name&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;.&lt;/code&gt; is the current directory&lt;/li&gt;
&lt;/ul&gt;




&lt;hr&gt;




&lt;h2&gt;Step Two:&lt;/h2&gt;


&lt;p&gt;&lt;strong&gt;Initialize git in local development environment.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This step will create a new git repository on your local machine and add all
the code that you&amp;#8217;ve rsynced in the previous step to that repo.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&amp;shy;&lt;code&gt;cd&lt;/code&gt; to the directory to which you previously rsynced
your site and initialize a git repository by running &lt;code&gt;git init&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /srv/www/tylercipriani.com/public_html/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Add the contents of the current directory to the git repository by running
&lt;code&gt;git add .&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Commit all your newly added files to the repo by running your first
commit &lt;code&gt;git commit -m &amp;#8220;First Commit&amp;#8221;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;hr&gt;




&lt;h2&gt;Step Three:&lt;/h2&gt;


&lt;p&gt;&lt;strong&gt;Setup a bare repo on your web server.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You need a bare repo out on your webserver that will act as a mirror to your
local development environment.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;ssh into your webserver and make a new directory, I usually make it above
the webroot (i.e. &lt;code&gt;htdocs&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mkdir tylercipriani.com.git &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;tylercipriani.com.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Once inside the new directory initialize a bare repository by using the
&lt;code&gt;--bare&lt;/code&gt; flag:&lt;/li&gt;
&lt;/ol&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git init --bare
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Now we can define a new post-receive hook that will be triggered whenever
an update is pushed to this new bare repository. The post-receive hook
can be any type of script you want, the script below is written in bash.
&lt;code&gt;cd&lt;/code&gt; into the &lt;code&gt;.git/hooks&lt;/code&gt; directory and create a
file called &amp;#8220;post-receive&amp;#8221;. Copy the code below into the file:&lt;/li&gt;
&lt;/ol&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;GIT_WORK_TREE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/path/to/your/htdocs/direcotry git checkout -f
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code&gt;make sure that this code is executable by running 
&amp;lt;code&amp;gt;chmod +x .git/hooks/post-receive&amp;lt;/code&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;




&lt;h2&gt;You&amp;#8217;re Done!&lt;/h2&gt;


&lt;p&gt;&lt;strong&gt;Push to your new repo, you beautiful command-line ninja, you!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Back on your local machine, in the webroot of your local development environment,
add your bare webserver repo as your &lt;code&gt;remote&lt;/code&gt; and push your git
repo up to your server. The post-receive hook will take care of the rest!&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git remote add web ssh://user@tylercipriani.com/home/user/tylercipriani.com.git
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;By using the &lt;code&gt;-u&lt;/code&gt; flag you&amp;#8217;re setting the upstream which means
you can just run &lt;code&gt;git pull&lt;/code&gt; without further arguments to merge
origin and master.&lt;/p&gt;
</description>
        <pubDate>Sun, 21 Oct 2012 00:00:00 -0600</pubDate>
        <link>http://www.tylercipriani.com/2012/10/21/move-existing-website-to-git.html</link>
        <guid isPermaLink="true">http://www.tylercipriani.com/2012/10/21/move-existing-website-to-git.html</guid>
      </item>
    
      <item>
        <title>Using .htaccess to remove Codeigniter&amp;#8217;s index.php file</title>
        <description>&lt;p&gt;Quick post today. I was just finishing up a codeigniter project and saw an error in the docs
in the &lt;a href=&quot;http://codeigniter.com/user_guide/general/urls.html&quot; title=&quot;CI URLs&quot;&gt;CodeIgniter User Guide Ver. 2.1.2 &amp;sect; CodeIgniter URLs&lt;/a&gt;
under the section heading, &amp;#8220;Removing the index.php file&amp;#8221; it shows an .htaccess file example:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; RewriteEngine on
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt; RewriteCond &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; !^&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;index&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;php&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;images&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;robots&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;txt&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt; RewriteRule ^&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.*&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;/index.php/&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;L&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;RewriteRule&lt;/code&gt; should not have the forward slash (&lt;code&gt;/&lt;/code&gt;) before &lt;code&gt;index.php&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To function as expected the &lt;code&gt;RewriteRule&lt;/code&gt; should read:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; RewriteEngine on
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt; RewriteCond &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; !^&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;index&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;php&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;images&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;js&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;css&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;robots&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;txt&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt; RewriteRule ^&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.*&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;index.php/&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;L&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;



</description>
        <pubDate>Mon, 20 Aug 2012 00:00:00 -0600</pubDate>
        <link>http://www.tylercipriani.com/2012/08/20/codeigniter-htaccess-file.html</link>
        <guid isPermaLink="true">http://www.tylercipriani.com/2012/08/20/codeigniter-htaccess-file.html</guid>
      </item>
    
  </channel>
</rss>